STRSEP(3)                 OpenBSD Programmer's Manual                STRSEP(3)

NAME
     strsep - separate strings

SYNOPSIS
     #include <string.h>

     char *
     strsep(char **stringp, const char *delim);

DESCRIPTION
     The strsep() function locates, in the string referenced by *stringp, the
     first occurrence of any character in the string delim (or the terminating
     `\0' character) and replaces it with a `\0'.  The location of the next
     character after the delimiter character (or NULL, if the end of the
     string was reached) is stored in *stringp.  The original value of
     *stringp is returned.

     An ``empty'' field, i.e., one caused by two adjacent delimiter charac-
     ters, can be detected by comparing the location referenced by the pointer
     returned by strsep() to `\0'.

     If *stringp is initially NULL, strsep() returns NULL.

EXAMPLES
     The following uses strsep() to parse a string, containing tokens delimit-
     ed by whitespace, into an argument vector:

           char **ap, *argv[10], *inputstring;

           for (ap = argv; ap < &argv[9] &&
               (*ap = strsep(&inputstring, " \t")) != NULL;) {
                   if (**ap != '\0')
                           ap++;
           }
           *ap = NULL;

HISTORY
     The strsep() function is intended as a replacement for the strtok() func-
     tion.  While the strtok() function should be preferred for portability
     reasons (it conforms to ANSI X3.159-1989 (``ANSI C'')) it is unable to
     handle empty fields, i.e., detect fields delimited by two adjacent delim-
     iter characters, or to be used for more than a single string at a time.
     The strsep() function first appeared in 4.4BSD.

OpenBSD 4.5                      May 31, 2007                                1

