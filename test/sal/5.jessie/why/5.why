type char_P

type int32

type int8

type padding

type uint16

type unsigned_short_P

type void_P

exception Loop_continue_exc of unit

exception Loop_exit_exc of unit

exception Return_label_exc of unit

logic bitvector_of_char_P: char_P pointer -> bitvector

logic char_P_of_bitvector: bitvector -> char_P pointer

axiom bitvector_of_char_P_of_char_P_of_bitvector :
 (forall x:bitvector. (bitvector_of_char_P(char_P_of_bitvector(x)) = x))

logic bitvector_of_int32: int32 -> bitvector

logic int32_of_bitvector: bitvector -> int32

axiom bitvector_of_int32_of_int32_of_bitvector :
 (forall x:bitvector. (bitvector_of_int32(int32_of_bitvector(x)) = x))

logic bitvector_of_int8: int8 -> bitvector

logic int8_of_bitvector: bitvector -> int8

axiom bitvector_of_int8_of_int8_of_bitvector :
 (forall x:bitvector. (bitvector_of_int8(int8_of_bitvector(x)) = x))

logic bitvector_of_uint16: uint16 -> bitvector

logic uint16_of_bitvector: bitvector -> uint16

axiom bitvector_of_uint16_of_uint16_of_bitvector :
 (forall x:bitvector. (bitvector_of_uint16(uint16_of_bitvector(x)) = x))

logic bitvector_of_unsigned_short_P: unsigned_short_P pointer -> bitvector

logic unsigned_short_P_of_bitvector: bitvector -> unsigned_short_P pointer

axiom bitvector_of_unsigned_short_P_of_unsigned_short_P_of_bitvector :
 (forall x:bitvector.
  (bitvector_of_unsigned_short_P(unsigned_short_P_of_bitvector(x)) = x))

logic bitvector_of_void_P: void_P pointer -> bitvector

logic void_P_of_bitvector: bitvector -> void_P pointer

axiom bitvector_of_void_P_of_void_P_of_bitvector :
 (forall x:bitvector. (bitvector_of_void_P(void_P_of_bitvector(x)) = x))

logic char_P_tag:  -> char_P tag_id

axiom char_P_int : (int_of_tag(char_P_tag) = (1))

axiom char_P_of_bitvector_of_bitvector_of_char_P :
 (forall x:char_P pointer. (char_P_of_bitvector(bitvector_of_char_P(x)) = x))

logic char_P_of_pointer_address: unit pointer -> char_P pointer

axiom char_P_of_pointer_address_of_pointer_addr :
 (forall p:char_P pointer.
  (p = char_P_of_pointer_address(pointer_address(p))))

axiom char_P_parenttag_bottom : parenttag(char_P_tag, bottom_tag)

axiom char_P_tags :
 (forall x:char_P pointer.
  (forall char_P_tag_table:char_P tag_table.
   instanceof(char_P_tag_table, x, char_P_tag)))

logic integer_of_int32: int32 -> int

predicate eq_int32(x:int32,
 y:int32) =
 eq_int(integer_of_int32(x), integer_of_int32(y))

logic integer_of_int8: int8 -> int

predicate eq_int8(x:int8,
 y:int8) =
 eq_int(integer_of_int8(x), integer_of_int8(y))

logic integer_of_uint16: uint16 -> int

predicate eq_uint16(x:uint16,
 y:uint16) =
 eq_int(integer_of_uint16(x), integer_of_uint16(y))

logic int32_of_integer: int -> int32

axiom int32_coerce :
 (forall x:int.
  ((le_int((-2147483648), x) and le_int(x, (2147483647))) ->
   eq_int(integer_of_int32(int32_of_integer(x)), x)))

axiom int32_of_bitvector_of_bitvector_of_int32 :
 (forall x:int32. eq_int32(int32_of_bitvector(bitvector_of_int32(x)), x))

axiom int32_range :
 (forall x:int32.
  (le_int((-2147483648), integer_of_int32(x))
  and le_int(integer_of_int32(x), (2147483647))))

logic int8_of_integer: int -> int8

axiom int8_coerce :
 (forall x:int.
  ((le_int((-128), x) and le_int(x, (127))) ->
   eq_int(integer_of_int8(int8_of_integer(x)), x)))

axiom int8_of_bitvector_of_bitvector_of_int8 :
 (forall x:int8. eq_int8(int8_of_bitvector(bitvector_of_int8(x)), x))

axiom int8_range :
 (forall x:int8.
  (le_int((-128), integer_of_int8(x)) and le_int(integer_of_int8(x), (127))))

predicate left_valid_struct_char_P(p:char_P pointer,
 a:int,
 char_P_alloc_table:char_P alloc_table) =
 (offset_min(char_P_alloc_table, p) <= a)

predicate left_valid_struct_unsigned_short_P(p:unsigned_short_P pointer,
 a:int,
 unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 (offset_min(unsigned_short_P_alloc_table, p) <= a)

predicate left_valid_struct_void_P(p:void_P pointer,
 a:int,
 void_P_alloc_table:void_P alloc_table) =
 (offset_min(void_P_alloc_table, p) <= a)

function maximum(i_0:int,
 j_0:int) : int =
 (if lt_int_bool(i_0, j_0) then j_0 else i_0)

logic memchr: char_P pointer, int, int, (char_P, int8) memory -> bool

axiom memchr_def :
 (forall char_P_char_M_s_3_at_L:(char_P, int8) memory.
  (forall s_8:char_P pointer.
   (forall c_2:int.
    (forall n_8:int.
     (eq_bool(memchr(s_8, c_2, n_8, char_P_char_M_s_3_at_L), true)
     <-> (exists i_2:int32.
          (le_int((0), integer_of_int32(i_2))
          and (lt_int(integer_of_int32(i_2), n_8)
              and eq_int(integer_of_int8(select(char_P_char_M_s_3_at_L,
                                         shift(s_8, integer_of_int32(i_2)))),
                  c_2)))))))))

logic memcmp: char_P pointer,
 char_P pointer,
 int,
 (char_P, int8) memory,
 (char_P, int8) memory -> int

axiom memcmp_range :
 (forall char_P_char_M_s2_2_at_L:(char_P, int8) memory.
  (forall char_P_char_M_s1_1_at_L:(char_P, int8) memory.
   (forall s1_4:char_P pointer.
    (forall s2_4:char_P pointer.
     (forall n_6:int.
      (le_int(sub_int(neg_int((2147483647)), (1)),
       memcmp(s1_4, s2_4, n_6, char_P_char_M_s2_2_at_L,
       char_P_char_M_s1_1_at_L))
      and le_int(memcmp(s1_4, s2_4, n_6, char_P_char_M_s2_2_at_L,
                 char_P_char_M_s1_1_at_L),
          (2147483647))))))))

logic strlen: char_P pointer, (char_P, int8) memory -> int

axiom memcmp_strlen_left :
 (forall char_P_char_M_s_5_at_L:(char_P, int8) memory.
  (forall s1_6:char_P pointer.
   (forall s2_6:char_P pointer.
    (forall n_10:int.
     ((eq_int(memcmp(s1_6, s2_6, n_10, char_P_char_M_s_5_at_L,
              char_P_char_M_s_5_at_L),
       (0))
      and lt_int(strlen(s1_6, char_P_char_M_s_5_at_L), n_10)) ->
      eq_int(strlen(s1_6, char_P_char_M_s_5_at_L),
      strlen(s2_6, char_P_char_M_s_5_at_L)))))))

axiom memcmp_strlen_right :
 (forall char_P_char_M_s_5_at_L:(char_P, int8) memory.
  (forall s1_7:char_P pointer.
   (forall s2_7:char_P pointer.
    (forall n_11:int.
     ((eq_int(memcmp(s1_7, s2_7, n_11, char_P_char_M_s_5_at_L,
              char_P_char_M_s_5_at_L),
       (0))
      and lt_int(strlen(s2_7, char_P_char_M_s_5_at_L), n_11)) ->
      eq_int(strlen(s1_7, char_P_char_M_s_5_at_L),
      strlen(s2_7, char_P_char_M_s_5_at_L)))))))

axiom memcmp_strlen_shift_left :
 (forall char_P_char_M_s_5_at_L:(char_P, int8) memory.
  (forall s1_8:char_P pointer.
   (forall s2_8:char_P pointer.
    (forall k_0:int.
     (forall n_12:int.
      ((eq_int(memcmp(s1_8, shift(s2_8, k_0), n_12, char_P_char_M_s_5_at_L,
               char_P_char_M_s_5_at_L),
        (0))
       and (le_int((0), k_0)
           and lt_int(strlen(s1_8, char_P_char_M_s_5_at_L), n_12))) ->
       (le_int((0), strlen(s2_8, char_P_char_M_s_5_at_L))
       and le_int(strlen(s2_8, char_P_char_M_s_5_at_L),
           add_int(k_0, strlen(s1_8, char_P_char_M_s_5_at_L))))))))))

axiom memcmp_strlen_shift_right :
 (forall char_P_char_M_s_5_at_L:(char_P, int8) memory.
  (forall s1_9:char_P pointer.
   (forall s2_9:char_P pointer.
    (forall k_1:int.
     (forall n_13:int.
      ((eq_int(memcmp(shift(s1_9, k_1), s2_9, n_13, char_P_char_M_s_5_at_L,
               char_P_char_M_s_5_at_L),
        (0))
       and (le_int((0), k_1)
           and lt_int(strlen(s2_9, char_P_char_M_s_5_at_L), n_13))) ->
       (le_int((0), strlen(s1_9, char_P_char_M_s_5_at_L))
       and le_int(strlen(s1_9, char_P_char_M_s_5_at_L),
           add_int(k_1, strlen(s2_9, char_P_char_M_s_5_at_L))))))))))

axiom memcmp_zero :
 (forall char_P_char_M_s2_2_at_L:(char_P, int8) memory.
  (forall char_P_char_M_s1_1_at_L:(char_P, int8) memory.
   (forall s1_5:char_P pointer.
    (forall s2_5:char_P pointer.
     (forall n_7:int.
      (eq_int(memcmp(s1_5, s2_5, n_7, char_P_char_M_s2_2_at_L,
              char_P_char_M_s1_1_at_L),
       (0))
      <-> (forall i_1:int.
           ((le_int((0), i_1) and lt_int(i_1, n_7)) ->
            eq_int(integer_of_int8(select(char_P_char_M_s1_1_at_L,
                                   shift(s1_5, i_1))),
            integer_of_int8(select(char_P_char_M_s2_2_at_L, shift(s2_5, i_1))))))))))))

logic memset: char_P pointer, int, int, (char_P, int8) memory -> bool

axiom memset_def :
 (forall char_P_char_M_s_4_at_L:(char_P, int8) memory.
  (forall s_9:char_P pointer.
   (forall c_3:int.
    (forall n_9:int.
     (eq_bool(memset(s_9, c_3, n_9, char_P_char_M_s_4_at_L), true)
     <-> (forall i_3:int.
          ((le_int((0), i_3) and lt_int(i_3, n_9)) ->
           eq_int(integer_of_int8(select(char_P_char_M_s_4_at_L,
                                  shift(s_9, i_3))),
           c_3))))))))

function minimum(i:int, j:int) : int = (if lt_int_bool(i, j) then i else j)

axiom pointer_addr_of_char_P_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(char_P_of_pointer_address(p))))

logic unsigned_short_P_of_pointer_address: unit pointer -> unsigned_short_P pointer

axiom pointer_addr_of_unsigned_short_P_of_pointer_address :
 (forall p:unit pointer.
  (p = pointer_address(unsigned_short_P_of_pointer_address(p))))

logic void_P_of_pointer_address: unit pointer -> void_P pointer

axiom pointer_addr_of_void_P_of_pointer_address :
 (forall p:unit pointer. (p = pointer_address(void_P_of_pointer_address(p))))

predicate right_valid_struct_char_P(p:char_P pointer,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 (offset_max(char_P_alloc_table, p) >= b)

predicate right_valid_struct_unsigned_short_P(p:unsigned_short_P pointer,
 b:int,
 unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 (offset_max(unsigned_short_P_alloc_table, p) >= b)

predicate right_valid_struct_void_P(p:void_P pointer,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 (offset_max(void_P_alloc_table, p) >= b)

logic strchr: char_P pointer, int, (char_P, int8) memory -> bool

axiom strchr_def :
 (forall char_P_char_M_s_10_at_L:(char_P, int8) memory.
  (forall s_21:char_P pointer.
   (forall c_4:int.
    (eq_bool(strchr(s_21, c_4, char_P_char_M_s_10_at_L), true)
    <-> (exists i_15:int.
         (le_int((0), i_15)
         and (le_int(i_15, strlen(s_21, char_P_char_M_s_10_at_L))
             and eq_int(integer_of_int8(select(char_P_char_M_s_10_at_L,
                                        shift(s_21, i_15))),
                 c_4))))))))

logic strcmp: char_P pointer,
 char_P pointer,
 (char_P, int8) memory,
 (char_P, int8) memory -> int

axiom strcmp_range :
 (forall char_P_char_M_s2_7_at_L:(char_P, int8) memory.
  (forall char_P_char_M_s1_6_at_L:(char_P, int8) memory.
   (forall s1_10:char_P pointer.
    (forall s2_10:char_P pointer.
     (le_int(sub_int(neg_int((2147483647)), (1)),
      strcmp(s1_10, s2_10, char_P_char_M_s2_7_at_L, char_P_char_M_s1_6_at_L))
     and le_int(strcmp(s1_10, s2_10, char_P_char_M_s2_7_at_L,
                char_P_char_M_s1_6_at_L),
         (2147483647)))))))

axiom strcmp_zero :
 (forall char_P_char_M_s2_7_at_L:(char_P, int8) memory.
  (forall char_P_char_M_s1_6_at_L:(char_P, int8) memory.
   (forall s1_11:char_P pointer.
    (forall s2_11:char_P pointer.
     (eq_int(strcmp(s1_11, s2_11, char_P_char_M_s2_7_at_L,
             char_P_char_M_s1_6_at_L),
      (0))
     <-> (eq_int(strlen(s1_11, char_P_char_M_s1_6_at_L),
          strlen(s2_11, char_P_char_M_s2_7_at_L))
         and (forall i_13:int.
              ((le_int((0), i_13)
               and le_int(i_13, strlen(s1_11, char_P_char_M_s1_6_at_L))) ->
               eq_int(integer_of_int8(select(char_P_char_M_s1_6_at_L,
                                      shift(s1_11, i_13))),
               integer_of_int8(select(char_P_char_M_s2_7_at_L,
                               shift(s2_11, i_13))))))))))))

predicate strict_valid_root_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) = a)
 and (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_root_unsigned_short_P(p:unsigned_short_P pointer,
 a:int,
 b:int,
 unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 ((offset_min(unsigned_short_P_alloc_table, p) = a)
 and (offset_max(unsigned_short_P_alloc_table, p) = b))

predicate strict_valid_root_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) = a)
 and (offset_max(void_P_alloc_table, p) = b))

predicate strict_valid_struct_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) = a)
 and (offset_max(char_P_alloc_table, p) = b))

predicate strict_valid_struct_unsigned_short_P(p:unsigned_short_P pointer,
 a:int,
 b:int,
 unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 ((offset_min(unsigned_short_P_alloc_table, p) = a)
 and (offset_max(unsigned_short_P_alloc_table, p) = b))

predicate strict_valid_struct_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) = a)
 and (offset_max(void_P_alloc_table, p) = b))

axiom strlen_at_null :
 (forall char_P_char_M_s_5_at_L:(char_P, int8) memory.
  (forall s_14:char_P pointer.
   (le_int((0), strlen(s_14, char_P_char_M_s_5_at_L)) ->
    eq_int(integer_of_int8(select(char_P_char_M_s_5_at_L,
                           shift(s_14, strlen(s_14, char_P_char_M_s_5_at_L)))),
    (0)))))

axiom strlen_before_null :
 (forall char_P_char_M_s_5_at_L:(char_P, int8) memory.
  (forall s_13:char_P pointer.
   (forall i_6:int.
    ((le_int((0), i_6) and lt_int(i_6, strlen(s_13, char_P_char_M_s_5_at_L))) ->
     neq_int(integer_of_int8(select(char_P_char_M_s_5_at_L, shift(s_13, i_6))),
     (0))))))

axiom strlen_create :
 (forall char_P_char_M_s_5_at_L:(char_P, int8) memory.
  (forall s_19:char_P pointer.
   (forall i_11:int.
    ((le_int((0), i_11)
     and (le_int(i_11, (2147483647))
         and eq_int(integer_of_int8(select(char_P_char_M_s_5_at_L,
                                    shift(s_19, i_11))),
             (0)))) ->
     (le_int((0), strlen(s_19, char_P_char_M_s_5_at_L))
     and le_int(strlen(s_19, char_P_char_M_s_5_at_L), i_11))))))

axiom strlen_create_shift :
 (forall char_P_char_M_s_5_at_L:(char_P, int8) memory.
  (forall s_20:char_P pointer.
   (forall i_12:int.
    (forall k:int.
     ((le_int((0), k)
      and (le_int(k, i_12)
          and (le_int(i_12, (2147483647))
              and eq_int(integer_of_int8(select(char_P_char_M_s_5_at_L,
                                         shift(s_20, i_12))),
                  (0))))) ->
      (le_int((0), strlen(shift(s_20, k), char_P_char_M_s_5_at_L))
      and le_int(strlen(shift(s_20, k), char_P_char_M_s_5_at_L),
          sub_int(i_12, k))))))))

axiom strlen_neg :
 (forall char_P_char_M_s_5_at_L:(char_P, int8) memory.
  (forall s_11:char_P pointer.
   ((forall i_5:int.
     ((le_int((0), i_5) and le_int(i_5, (2147483647))) ->
      neq_int(integer_of_int8(select(char_P_char_M_s_5_at_L,
                              shift(s_11, i_5))),
      (0)))) ->
    lt_int(strlen(s_11, char_P_char_M_s_5_at_L), (0)))))

axiom strlen_not_zero :
 (forall char_P_char_M_s_5_at_L:(char_P, int8) memory.
  (forall s_15:char_P pointer.
   (forall i_7:int.
    ((le_int((0), i_7)
     and (le_int(i_7, strlen(s_15, char_P_char_M_s_5_at_L))
         and neq_int(integer_of_int8(select(char_P_char_M_s_5_at_L,
                                     shift(s_15, i_7))),
             (0)))) ->
     lt_int(i_7, strlen(s_15, char_P_char_M_s_5_at_L))))))

axiom strlen_pos_or_null :
 (forall char_P_char_M_s_5_at_L:(char_P, int8) memory.
  (forall s_10:char_P pointer.
   (forall i_4:int.
    ((le_int((0), i_4)
     and (le_int(i_4, (2147483647))
         and ((forall j_1:int.
               ((le_int((0), j_1) and lt_int(j_1, i_4)) ->
                neq_int(integer_of_int8(select(char_P_char_M_s_5_at_L,
                                        shift(s_10, j_1))),
                (0))))
             and eq_int(integer_of_int8(select(char_P_char_M_s_5_at_L,
                                        shift(s_10, i_4))),
                 (0))))) ->
     eq_int(strlen(s_10, char_P_char_M_s_5_at_L), i_4)))))

axiom strlen_range :
 (forall char_P_char_M_s_5_at_L:(char_P, int8) memory.
  (forall s_12:char_P pointer.
   le_int(strlen(s_12, char_P_char_M_s_5_at_L), (2147483647))))

axiom strlen_shift :
 (forall char_P_char_M_s_5_at_L:(char_P, int8) memory.
  (forall s_18:char_P pointer.
   (forall i_10:int.
    ((le_int((0), i_10)
     and le_int(i_10, strlen(s_18, char_P_char_M_s_5_at_L))) ->
     eq_int(strlen(shift(s_18, i_10), char_P_char_M_s_5_at_L),
     sub_int(strlen(s_18, char_P_char_M_s_5_at_L), i_10))))))

axiom strlen_sup :
 (forall char_P_char_M_s_5_at_L:(char_P, int8) memory.
  (forall s_17:char_P pointer.
   (forall i_9:int.
    ((le_int((0), i_9)
     and eq_int(integer_of_int8(select(char_P_char_M_s_5_at_L,
                                shift(s_17, i_9))),
         (0))) ->
     (le_int((0), strlen(s_17, char_P_char_M_s_5_at_L))
     and le_int(strlen(s_17, char_P_char_M_s_5_at_L), i_9))))))

axiom strlen_zero :
 (forall char_P_char_M_s_5_at_L:(char_P, int8) memory.
  (forall s_16:char_P pointer.
   (forall i_8:int.
    ((le_int((0), i_8)
     and (le_int(i_8, strlen(s_16, char_P_char_M_s_5_at_L))
         and eq_int(integer_of_int8(select(char_P_char_M_s_5_at_L,
                                    shift(s_16, i_8))),
             (0)))) ->
     eq_int(i_8, strlen(s_16, char_P_char_M_s_5_at_L))))))

logic strncmp: char_P pointer,
 char_P pointer,
 int,
 (char_P, int8) memory,
 (char_P, int8) memory -> int

axiom strncmp_zero :
 (forall char_P_char_M_s2_9_at_L:(char_P, int8) memory.
  (forall char_P_char_M_s1_8_at_L:(char_P, int8) memory.
   (forall s1_12:char_P pointer.
    (forall s2_12:char_P pointer.
     (forall n_14:int.
      (eq_int(strncmp(s1_12, s2_12, n_14, char_P_char_M_s2_9_at_L,
              char_P_char_M_s1_8_at_L),
       (0))
      <-> ((lt_int(strlen(s1_12, char_P_char_M_s1_8_at_L), n_14)
           and eq_int(strcmp(s1_12, s2_12, char_P_char_M_s2_9_at_L,
                      char_P_char_M_s1_8_at_L),
               (0)))
          or (forall i_14:int.
              ((le_int((0), i_14) and lt_int(i_14, n_14)) ->
               eq_int(integer_of_int8(select(char_P_char_M_s1_8_at_L,
                                      shift(s1_12, i_14))),
               integer_of_int8(select(char_P_char_M_s2_9_at_L,
                               shift(s2_12, i_14)))))))))))))

logic uint16_of_integer: int -> uint16

axiom uint16_coerce :
 (forall x:int.
  ((le_int((0), x) and le_int(x, (65535))) ->
   eq_int(integer_of_uint16(uint16_of_integer(x)), x)))

axiom uint16_of_bitvector_of_bitvector_of_uint16 :
 (forall x:uint16. eq_uint16(uint16_of_bitvector(bitvector_of_uint16(x)), x))

axiom uint16_range :
 (forall x:uint16.
  (le_int((0), integer_of_uint16(x))
  and le_int(integer_of_uint16(x), (65535))))

logic unsigned_short_P_tag:  -> unsigned_short_P tag_id

axiom unsigned_short_P_int : (int_of_tag(unsigned_short_P_tag) = (1))

axiom unsigned_short_P_of_bitvector_of_bitvector_of_unsigned_short_P :
 (forall x:unsigned_short_P pointer.
  (unsigned_short_P_of_bitvector(bitvector_of_unsigned_short_P(x)) = x))

axiom unsigned_short_P_of_pointer_address_of_pointer_addr :
 (forall p:unsigned_short_P pointer.
  (p = unsigned_short_P_of_pointer_address(pointer_address(p))))

axiom unsigned_short_P_parenttag_bottom :
 parenttag(unsigned_short_P_tag, bottom_tag)

axiom unsigned_short_P_tags :
 (forall x:unsigned_short_P pointer.
  (forall unsigned_short_P_tag_table:unsigned_short_P tag_table.
   instanceof(unsigned_short_P_tag_table, x, unsigned_short_P_tag)))

predicate valid_bitvector_struct_char_P(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_unsigned_short_P(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_bitvector_struct_void_P(p:unit pointer,
 a:int,
 b:int,
 bitvector_alloc_table:unit alloc_table) =
 ((offset_min(bitvector_alloc_table, p) = a)
 and (offset_max(bitvector_alloc_table, p) = b))

predicate valid_root_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) <= a)
 and (offset_max(char_P_alloc_table, p) >= b))

predicate valid_root_unsigned_short_P(p:unsigned_short_P pointer,
 a:int,
 b:int,
 unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 ((offset_min(unsigned_short_P_alloc_table, p) <= a)
 and (offset_max(unsigned_short_P_alloc_table, p) >= b))

predicate valid_root_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) <= a)
 and (offset_max(void_P_alloc_table, p) >= b))

predicate valid_string(s_4:char_P pointer,
 char_P_s_16_alloc_table_at_L:char_P alloc_table,
 char_P_char_M_s_16_at_L:(char_P, int8) memory) =
 (le_int((0), strlen(s_4, char_P_char_M_s_16_at_L))
 and (le_int(offset_min(char_P_s_16_alloc_table_at_L, s_4), (0))
     and ge_int(offset_max(char_P_s_16_alloc_table_at_L, s_4),
         strlen(s_4, char_P_char_M_s_16_at_L))))

predicate valid_string_or_null(s_5:char_P pointer,
 char_P_s_17_alloc_table_at_L:char_P alloc_table,
 char_P_char_M_s_17_at_L:(char_P, int8) memory) =
 ((s_5 = null)
 or valid_string(s_5, char_P_s_17_alloc_table_at_L, char_P_char_M_s_17_at_L))

predicate valid_struct_char_P(p:char_P pointer,
 a:int,
 b:int,
 char_P_alloc_table:char_P alloc_table) =
 ((offset_min(char_P_alloc_table, p) <= a)
 and (offset_max(char_P_alloc_table, p) >= b))

predicate valid_struct_unsigned_short_P(p:unsigned_short_P pointer,
 a:int,
 b:int,
 unsigned_short_P_alloc_table:unsigned_short_P alloc_table) =
 ((offset_min(unsigned_short_P_alloc_table, p) <= a)
 and (offset_max(unsigned_short_P_alloc_table, p) >= b))

predicate valid_struct_void_P(p:void_P pointer,
 a:int,
 b:int,
 void_P_alloc_table:void_P alloc_table) =
 ((offset_min(void_P_alloc_table, p) <= a)
 and (offset_max(void_P_alloc_table, p) >= b))

logic wcslen: unsigned_short_P pointer,
 (unsigned_short_P, uint16) memory -> int

predicate valid_wstring(s_6:unsigned_short_P pointer,
 unsigned_short_P_s_18_alloc_table_at_L:unsigned_short_P alloc_table,
 unsigned_short_P_unsigned_short_M_s_18_at_L:(unsigned_short_P, uint16) memory) =
 (le_int((0), wcslen(s_6, unsigned_short_P_unsigned_short_M_s_18_at_L))
 and (le_int(offset_min(unsigned_short_P_s_18_alloc_table_at_L, s_6), (0))
     and ge_int(offset_max(unsigned_short_P_s_18_alloc_table_at_L, s_6),
         wcslen(s_6, unsigned_short_P_unsigned_short_M_s_18_at_L))))

predicate valid_wstring_or_null(s_7:unsigned_short_P pointer,
 unsigned_short_P_s_19_alloc_table_at_L:unsigned_short_P alloc_table,
 unsigned_short_P_unsigned_short_M_s_19_at_L:(unsigned_short_P, uint16) memory) =
 ((s_7 = null)
 or valid_wstring(s_7, unsigned_short_P_s_19_alloc_table_at_L,
    unsigned_short_P_unsigned_short_M_s_19_at_L))

logic void_P_tag:  -> void_P tag_id

axiom void_P_int : (int_of_tag(void_P_tag) = (1))

axiom void_P_of_bitvector_of_bitvector_of_void_P :
 (forall x:void_P pointer. (void_P_of_bitvector(bitvector_of_void_P(x)) = x))

axiom void_P_of_pointer_address_of_pointer_addr :
 (forall p:void_P pointer.
  (p = void_P_of_pointer_address(pointer_address(p))))

axiom void_P_parenttag_bottom : parenttag(void_P_tag, bottom_tag)

axiom void_P_tags :
 (forall x:void_P pointer.
  (forall void_P_tag_table:void_P tag_table.
   instanceof(void_P_tag_table, x, void_P_tag)))

logic wcscmp: unsigned_short_P pointer,
 unsigned_short_P pointer,
 (unsigned_short_P, uint16) memory,
 (unsigned_short_P, uint16) memory -> int

axiom wcscmp_zero :
 (forall unsigned_short_P_unsigned_short_M_s2_13_at_L:(unsigned_short_P, uint16) memory.
  (forall unsigned_short_P_unsigned_short_M_s1_12_at_L:(unsigned_short_P, uint16) memory.
   (forall s1_13:unsigned_short_P pointer.
    (forall s2_13:unsigned_short_P pointer.
     (eq_int(wcscmp(s1_13, s2_13,
             unsigned_short_P_unsigned_short_M_s2_13_at_L,
             unsigned_short_P_unsigned_short_M_s1_12_at_L),
      (0))
     <-> (eq_int(wcslen(s1_13, unsigned_short_P_unsigned_short_M_s1_12_at_L),
          wcslen(s2_13, unsigned_short_P_unsigned_short_M_s2_13_at_L))
         and (forall i_25:int.
              ((le_int((0), i_25)
               and le_int(i_25,
                   wcslen(s1_13,
                   unsigned_short_P_unsigned_short_M_s1_12_at_L))) ->
               eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s1_12_at_L,
                                        shift(s1_13, i_25))),
               integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s2_13_at_L,
                                 shift(s2_13, i_25))))))))))))

axiom wcslen_at_null :
 (forall unsigned_short_P_unsigned_short_M_s_11_at_L:(unsigned_short_P, uint16) memory.
  (forall s_25:unsigned_short_P pointer.
   (le_int((0), wcslen(s_25, unsigned_short_P_unsigned_short_M_s_11_at_L)) ->
    eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_11_at_L,
                             shift(s_25,
                             wcslen(s_25,
                             unsigned_short_P_unsigned_short_M_s_11_at_L)))),
    (0)))))

axiom wcslen_before_null :
 (forall unsigned_short_P_unsigned_short_M_s_11_at_L:(unsigned_short_P, uint16) memory.
  (forall s_24:unsigned_short_P pointer.
   (forall i_18:int32.
    ((le_int((0), integer_of_int32(i_18))
     and lt_int(integer_of_int32(i_18),
         wcslen(s_24, unsigned_short_P_unsigned_short_M_s_11_at_L))) ->
     neq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_11_at_L,
                               shift(s_24, integer_of_int32(i_18)))),
     (0))))))

axiom wcslen_create :
 (forall unsigned_short_P_unsigned_short_M_s_11_at_L:(unsigned_short_P, uint16) memory.
  (forall s_30:unsigned_short_P pointer.
   (forall i_23:int32.
    ((le_int((0), integer_of_int32(i_23))
     and eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_11_at_L,
                                  shift(s_30, integer_of_int32(i_23)))),
         (0))) ->
     (le_int((0), wcslen(s_30, unsigned_short_P_unsigned_short_M_s_11_at_L))
     and le_int(wcslen(s_30, unsigned_short_P_unsigned_short_M_s_11_at_L),
         integer_of_int32(i_23)))))))

axiom wcslen_create_shift :
 (forall unsigned_short_P_unsigned_short_M_s_11_at_L:(unsigned_short_P, uint16) memory.
  (forall s_31:unsigned_short_P pointer.
   (forall i_24:int32.
    (forall k_2:int32.
     ((le_int((0), integer_of_int32(k_2))
      and (le_int(integer_of_int32(k_2), integer_of_int32(i_24))
          and eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_11_at_L,
                                       shift(s_31, integer_of_int32(i_24)))),
              (0)))) ->
      (le_int((0),
       wcslen(shift(s_31, integer_of_int32(k_2)),
       unsigned_short_P_unsigned_short_M_s_11_at_L))
      and le_int(wcslen(shift(s_31, integer_of_int32(k_2)),
                 unsigned_short_P_unsigned_short_M_s_11_at_L),
          sub_int(integer_of_int32(i_24), integer_of_int32(k_2)))))))))

axiom wcslen_neg :
 (forall unsigned_short_P_unsigned_short_M_s_11_at_L:(unsigned_short_P, uint16) memory.
  (forall s_23:unsigned_short_P pointer.
   ((forall i_17:int.
     (le_int((0), i_17) ->
      neq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_11_at_L,
                                shift(s_23, i_17))),
      (0)))) ->
    lt_int(wcslen(s_23, unsigned_short_P_unsigned_short_M_s_11_at_L), (0)))))

axiom wcslen_not_zero :
 (forall unsigned_short_P_unsigned_short_M_s_11_at_L:(unsigned_short_P, uint16) memory.
  (forall s_26:unsigned_short_P pointer.
   (forall i_19:int32.
    ((le_int((0), integer_of_int32(i_19))
     and (le_int(integer_of_int32(i_19),
          wcslen(s_26, unsigned_short_P_unsigned_short_M_s_11_at_L))
         and neq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_11_at_L,
                                       shift(s_26, integer_of_int32(i_19)))),
             (0)))) ->
     lt_int(integer_of_int32(i_19),
     wcslen(s_26, unsigned_short_P_unsigned_short_M_s_11_at_L))))))

axiom wcslen_pos_or_null :
 (forall unsigned_short_P_unsigned_short_M_s_11_at_L:(unsigned_short_P, uint16) memory.
  (forall s_22:unsigned_short_P pointer.
   (forall i_16:int.
    ((le_int((0), i_16)
     and ((forall j_2:int.
           ((le_int((0), j_2) and lt_int(j_2, i_16)) ->
            neq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_11_at_L,
                                      shift(s_22, j_2))),
            (0))))
         and eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_11_at_L,
                                      shift(s_22, i_16))),
             (0)))) ->
     eq_int(wcslen(s_22, unsigned_short_P_unsigned_short_M_s_11_at_L), i_16)))))

axiom wcslen_shift :
 (forall unsigned_short_P_unsigned_short_M_s_11_at_L:(unsigned_short_P, uint16) memory.
  (forall s_29:unsigned_short_P pointer.
   (forall i_22:int32.
    ((le_int((0), integer_of_int32(i_22))
     and le_int(integer_of_int32(i_22),
         wcslen(s_29, unsigned_short_P_unsigned_short_M_s_11_at_L))) ->
     eq_int(wcslen(shift(s_29, integer_of_int32(i_22)),
            unsigned_short_P_unsigned_short_M_s_11_at_L),
     sub_int(wcslen(s_29, unsigned_short_P_unsigned_short_M_s_11_at_L),
     integer_of_int32(i_22)))))))

axiom wcslen_sup :
 (forall unsigned_short_P_unsigned_short_M_s_11_at_L:(unsigned_short_P, uint16) memory.
  (forall s_28:unsigned_short_P pointer.
   (forall i_21:int32.
    ((le_int((0), integer_of_int32(i_21))
     and eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_11_at_L,
                                  shift(s_28, integer_of_int32(i_21)))),
         (0))) ->
     (le_int((0), wcslen(s_28, unsigned_short_P_unsigned_short_M_s_11_at_L))
     and le_int(wcslen(s_28, unsigned_short_P_unsigned_short_M_s_11_at_L),
         integer_of_int32(i_21)))))))

axiom wcslen_zero :
 (forall unsigned_short_P_unsigned_short_M_s_11_at_L:(unsigned_short_P, uint16) memory.
  (forall s_27:unsigned_short_P pointer.
   (forall i_20:int32.
    ((le_int((0), integer_of_int32(i_20))
     and (le_int(integer_of_int32(i_20),
          wcslen(s_27, unsigned_short_P_unsigned_short_M_s_11_at_L))
         and eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s_11_at_L,
                                      shift(s_27, integer_of_int32(i_20)))),
             (0)))) ->
     eq_int(integer_of_int32(i_20),
     wcslen(s_27, unsigned_short_P_unsigned_short_M_s_11_at_L))))))

logic wcsncmp: unsigned_short_P pointer,
 unsigned_short_P pointer,
 int,
 (unsigned_short_P, uint16) memory,
 (unsigned_short_P, uint16) memory -> int

axiom wcsncmp_zero :
 (forall unsigned_short_P_unsigned_short_M_s2_15_at_L:(unsigned_short_P, uint16) memory.
  (forall unsigned_short_P_unsigned_short_M_s1_14_at_L:(unsigned_short_P, uint16) memory.
   (forall s1_14:unsigned_short_P pointer.
    (forall s2_14:unsigned_short_P pointer.
     (forall n_15:int.
      (eq_int(wcsncmp(s1_14, s2_14, n_15,
              unsigned_short_P_unsigned_short_M_s2_15_at_L,
              unsigned_short_P_unsigned_short_M_s1_14_at_L),
       (0))
      <-> ((lt_int(wcslen(s1_14,
                   unsigned_short_P_unsigned_short_M_s1_14_at_L),
            n_15)
           and eq_int(wcscmp(s1_14, s2_14,
                      unsigned_short_P_unsigned_short_M_s2_15_at_L,
                      unsigned_short_P_unsigned_short_M_s1_14_at_L),
               (0)))
          or (forall i_26:int.
              ((le_int((0), i_26) and lt_int(i_26, n_15)) ->
               eq_int(integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s1_14_at_L,
                                        shift(s1_14, i_26))),
               integer_of_uint16(select(unsigned_short_P_unsigned_short_M_s2_15_at_L,
                                 shift(s2_14, i_26)))))))))))))

parameter alloc_bitvector_struct_char_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_char_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_char_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_unsigned_short_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_unsigned_short_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_unsigned_short_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_unsigned_short_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_void_P :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { } unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_void_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter alloc_bitvector_struct_void_P_requires :
 n:int ->
  bitvector_alloc_table:unit alloc_table ref ->
   { ge_int(n, (0))} unit pointer writes bitvector_alloc_table
   { (valid_bitvector_struct_void_P(result, (0), sub_int(n, (1)),
      bitvector_alloc_table)
     and (alloc_extends(bitvector_alloc_table@, bitvector_alloc_table)
         and alloc_fresh(bitvector_alloc_table@, result, n))) }

parameter char_P_alloc_table : char_P alloc_table ref

parameter char_P_tag_table : char_P tag_table ref

parameter alloc_struct_char_P :
 n:int ->
  char_P_alloc_table:char_P alloc_table ref ->
   char_P_tag_table:char_P tag_table ref ->
    { } char_P pointer writes char_P_alloc_table,char_P_tag_table
    { (strict_valid_struct_char_P(result, (0), sub_int(n, (1)),
       char_P_alloc_table)
      and (alloc_extends(char_P_alloc_table@, char_P_alloc_table)
          and (alloc_fresh(char_P_alloc_table@, result, n)
              and instanceof(char_P_tag_table, result, char_P_tag)))) }

parameter alloc_struct_char_P_requires :
 n:int ->
  char_P_alloc_table:char_P alloc_table ref ->
   char_P_tag_table:char_P tag_table ref ->
    { ge_int(n, (0))} char_P pointer
    writes char_P_alloc_table,char_P_tag_table
    { (strict_valid_struct_char_P(result, (0), sub_int(n, (1)),
       char_P_alloc_table)
      and (alloc_extends(char_P_alloc_table@, char_P_alloc_table)
          and (alloc_fresh(char_P_alloc_table@, result, n)
              and instanceof(char_P_tag_table, result, char_P_tag)))) }

parameter unsigned_short_P_alloc_table : unsigned_short_P alloc_table ref

parameter unsigned_short_P_tag_table : unsigned_short_P tag_table ref

parameter alloc_struct_unsigned_short_P :
 n:int ->
  unsigned_short_P_alloc_table:unsigned_short_P alloc_table ref ->
   unsigned_short_P_tag_table:unsigned_short_P tag_table ref ->
    { } unsigned_short_P pointer
    writes unsigned_short_P_alloc_table,unsigned_short_P_tag_table
    { (strict_valid_struct_unsigned_short_P(result, (0), sub_int(n, (1)),
       unsigned_short_P_alloc_table)
      and (alloc_extends(unsigned_short_P_alloc_table@,
           unsigned_short_P_alloc_table)
          and (alloc_fresh(unsigned_short_P_alloc_table@, result, n)
              and instanceof(unsigned_short_P_tag_table, result,
                  unsigned_short_P_tag)))) }

parameter alloc_struct_unsigned_short_P_requires :
 n:int ->
  unsigned_short_P_alloc_table:unsigned_short_P alloc_table ref ->
   unsigned_short_P_tag_table:unsigned_short_P tag_table ref ->
    { ge_int(n, (0))} unsigned_short_P pointer
    writes unsigned_short_P_alloc_table,unsigned_short_P_tag_table
    { (strict_valid_struct_unsigned_short_P(result, (0), sub_int(n, (1)),
       unsigned_short_P_alloc_table)
      and (alloc_extends(unsigned_short_P_alloc_table@,
           unsigned_short_P_alloc_table)
          and (alloc_fresh(unsigned_short_P_alloc_table@, result, n)
              and instanceof(unsigned_short_P_tag_table, result,
                  unsigned_short_P_tag)))) }

parameter void_P_alloc_table : void_P alloc_table ref

parameter void_P_tag_table : void_P tag_table ref

parameter alloc_struct_void_P :
 n:int ->
  void_P_alloc_table:void_P alloc_table ref ->
   void_P_tag_table:void_P tag_table ref ->
    { } void_P pointer writes void_P_alloc_table,void_P_tag_table
    { (strict_valid_struct_void_P(result, (0), sub_int(n, (1)),
       void_P_alloc_table)
      and (alloc_extends(void_P_alloc_table@, void_P_alloc_table)
          and (alloc_fresh(void_P_alloc_table@, result, n)
              and instanceof(void_P_tag_table, result, void_P_tag)))) }

parameter alloc_struct_void_P_requires :
 n:int ->
  void_P_alloc_table:void_P alloc_table ref ->
   void_P_tag_table:void_P tag_table ref ->
    { ge_int(n, (0))} void_P pointer
    writes void_P_alloc_table,void_P_tag_table
    { (strict_valid_struct_void_P(result, (0), sub_int(n, (1)),
       void_P_alloc_table)
      and (alloc_extends(void_P_alloc_table@, void_P_alloc_table)
          and (alloc_fresh(void_P_alloc_table@, result, n)
              and instanceof(void_P_tag_table, result, void_P_tag)))) }

parameter any_int32 : unit -> { } int32 { true }

parameter any_int8 : unit -> { } int8 { true }

parameter any_uint16 : unit -> { } uint16 { true }

parameter f5 :
 t:char_P pointer ->
  size:int32 ->
   char_P_char_M_t_20:(char_P, int8) memory ref ->
    char_P_t_20_alloc_table:char_P alloc_table ->
     { } unit writes char_P_char_M_t_20
     { ((((t@ = null) or le_int(integer_of_int32(size@), (0))) ->
         (JC_26:
         not_assigns(char_P_t_20_alloc_table@, char_P_char_M_t_20@,
         char_P_char_M_t_20, pset_empty)))
       and ((true = true) ->
            (JC_20:
            not_assigns(char_P_t_20_alloc_table@, char_P_char_M_t_20@,
            char_P_char_M_t_20,
            pset_range(pset_singleton(t@),
            sub_int(integer_of_int32(size@), (1)),
            sub_int(integer_of_int32(size@), (1))))))) }

parameter f5_requires :
 t:char_P pointer ->
  size:int32 ->
   char_P_char_M_t_20:(char_P, int8) memory ref ->
    char_P_t_20_alloc_table:char_P alloc_table ->
     { (JC_7:
       ((JC_1: gt_int(integer_of_int32(size), (0)))
       and ((JC_2: lt_int(integer_of_int32(size), (2147483647)))
           and ((JC_3: le_int(offset_min(char_P_t_20_alloc_table, t), (0)))
               and ((JC_4:
                    ge_int(offset_max(char_P_t_20_alloc_table, t), (0)))
                   and ((JC_5:
                        le_int(offset_min(char_P_t_20_alloc_table, t), (0)))
                       and (JC_6:
                           ge_int(offset_max(char_P_t_20_alloc_table, t),
                           sub_int(integer_of_int32(size), (1))))))))))}
     unit writes char_P_char_M_t_20
     { ((((t@ = null) or le_int(integer_of_int32(size@), (0))) ->
         (JC_26:
         not_assigns(char_P_t_20_alloc_table@, char_P_char_M_t_20@,
         char_P_char_M_t_20, pset_empty)))
       and ((true = true) ->
            (JC_20:
            not_assigns(char_P_t_20_alloc_table@, char_P_char_M_t_20@,
            char_P_char_M_t_20,
            pset_range(pset_singleton(t@),
            sub_int(integer_of_int32(size@), (1)),
            sub_int(integer_of_int32(size@), (1))))))) }

parameter int32_of_integer_ :
 x:int ->
  { (le_int((-2147483648), x) and le_int(x, (2147483647)))} int32
  { eq_int(integer_of_int32(result), x) }

parameter int8_of_integer_ :
 x:int ->
  { (le_int((-128), x) and le_int(x, (127)))} int8
  { eq_int(integer_of_int8(result), x) }

parameter safe_int32_of_integer_ :
 x:int -> { } int32 { eq_int(integer_of_int32(result), x) }

parameter safe_int8_of_integer_ :
 x:int -> { } int8 { eq_int(integer_of_int8(result), x) }

parameter safe_uint16_of_integer_ :
 x:int -> { } uint16 { eq_int(integer_of_uint16(result), x) }

parameter uint16_of_integer_ :
 x:int ->
  { (le_int((0), x) and le_int(x, (65535)))} uint16
  { eq_int(integer_of_uint16(result), x) }

let f5_ensures_default =
 fun (t : char_P pointer) (size : int32) (char_P_char_M_t_20 : (char_P, int8) memory ref) (char_P_t_20_alloc_table : char_P alloc_table) ->
  { ((true = true)
    and (JC_15:
        ((JC_9: gt_int(integer_of_int32(size), (0)))
        and ((JC_10: lt_int(integer_of_int32(size), (2147483647)))
            and ((JC_11: le_int(offset_min(char_P_t_20_alloc_table, t), (0)))
                and ((JC_12:
                     ge_int(offset_max(char_P_t_20_alloc_table, t), (0)))
                    and ((JC_13:
                         le_int(offset_min(char_P_t_20_alloc_table, t), (0)))
                        and (JC_14:
                            ge_int(offset_max(char_P_t_20_alloc_table, t),
                            sub_int(integer_of_int32(size), (1))))))))))) }
  (init:
  try
   begin
     (if ((safe_neq_pointer t) null)
     then
      (if ((gt_int_ (integer_of_int32 size)) (0))
      then
       (C_5:
       (let jessie_10 = (let jessie_6 = (safe_int8_of_integer_ (0)) in
                        (let jessie_9 = (C_3:
                                        ((shift t) (integer_of_int32 
                                                    (C_2:
                                                    (safe_int32_of_integer_ 
                                                     (C_1:
                                                     ((sub_int (integer_of_int32 size)) (1)))))))) in
                        (((safe_upd_ char_P_char_M_t_20) jessie_9) jessie_6))) in
       void))
      else void)
     else void);
    (raise Return);
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_18:
    not_assigns(char_P_t_20_alloc_table@, char_P_char_M_t_20@,
    char_P_char_M_t_20,
    pset_range(pset_singleton(t@), sub_int(integer_of_int32(size@), (1)),
    sub_int(integer_of_int32(size@), (1))))) }

let f5_ensures_normal =
 fun (t : char_P pointer) (size : int32) (char_P_char_M_t_20 : (char_P, int8) memory ref) (char_P_t_20_alloc_table : char_P alloc_table) ->
  { (gt_int(integer_of_int32(size), (0))
    and (JC_15:
        ((JC_9: gt_int(integer_of_int32(size), (0)))
        and ((JC_10: lt_int(integer_of_int32(size), (2147483647)))
            and ((JC_11: le_int(offset_min(char_P_t_20_alloc_table, t), (0)))
                and ((JC_12:
                     ge_int(offset_max(char_P_t_20_alloc_table, t), (0)))
                    and ((JC_13:
                         le_int(offset_min(char_P_t_20_alloc_table, t), (0)))
                        and (JC_14:
                            ge_int(offset_max(char_P_t_20_alloc_table, t),
                            sub_int(integer_of_int32(size), (1))))))))))) }
  (init:
  try
   begin
     (if ((safe_neq_pointer t) null)
     then
      (if ((gt_int_ (integer_of_int32 size)) (0))
      then
       (C_5:
       (let jessie_20 = (let jessie_16 = (safe_int8_of_integer_ (0)) in
                        (let jessie_19 = (C_3:
                                         ((shift t) (integer_of_int32 
                                                     (C_2:
                                                     (safe_int32_of_integer_ 
                                                      (C_1:
                                                      ((sub_int (integer_of_int32 size)) (1)))))))) in
                        (((safe_upd_ char_P_char_M_t_20) jessie_19) jessie_16))) in
       void))
      else void)
     else void);
    (raise Return);
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_27: true) }

let f5_ensures_zero =
 fun (t : char_P pointer) (size : int32) (char_P_char_M_t_20 : (char_P, int8) memory ref) (char_P_t_20_alloc_table : char_P alloc_table) ->
  { (((t = null) or le_int(integer_of_int32(size), (0)))
    and (JC_15:
        ((JC_9: gt_int(integer_of_int32(size), (0)))
        and ((JC_10: lt_int(integer_of_int32(size), (2147483647)))
            and ((JC_11: le_int(offset_min(char_P_t_20_alloc_table, t), (0)))
                and ((JC_12:
                     ge_int(offset_max(char_P_t_20_alloc_table, t), (0)))
                    and ((JC_13:
                         le_int(offset_min(char_P_t_20_alloc_table, t), (0)))
                        and (JC_14:
                            ge_int(offset_max(char_P_t_20_alloc_table, t),
                            sub_int(integer_of_int32(size), (1))))))))))) }
  (init:
  try
   begin
     (if ((safe_neq_pointer t) null)
     then
      (if ((gt_int_ (integer_of_int32 size)) (0))
      then
       (C_5:
       (let jessie_15 = (let jessie_11 = (safe_int8_of_integer_ (0)) in
                        (let jessie_14 = (C_3:
                                         ((shift t) (integer_of_int32 
                                                     (C_2:
                                                     (safe_int32_of_integer_ 
                                                      (C_1:
                                                      ((sub_int (integer_of_int32 size)) (1)))))))) in
                        (((safe_upd_ char_P_char_M_t_20) jessie_14) jessie_11))) in
       void))
      else void)
     else void);
    (raise Return);
    (raise Return)
   end
   with
   Return ->
   void end)
  { (JC_24:
    not_assigns(char_P_t_20_alloc_table@, char_P_char_M_t_20@,
    char_P_char_M_t_20, pset_empty)) }

let f5_safety =
 fun (t : char_P pointer) (size : int32) (char_P_char_M_t_20 : (char_P, int8) memory ref) (char_P_t_20_alloc_table : char_P alloc_table) ->
  { (JC_15:
    ((JC_9: gt_int(integer_of_int32(size), (0)))
    and ((JC_10: lt_int(integer_of_int32(size), (2147483647)))
        and ((JC_11: le_int(offset_min(char_P_t_20_alloc_table, t), (0)))
            and ((JC_12: ge_int(offset_max(char_P_t_20_alloc_table, t), (0)))
                and ((JC_13:
                     le_int(offset_min(char_P_t_20_alloc_table, t), (0)))
                    and (JC_14:
                        ge_int(offset_max(char_P_t_20_alloc_table, t),
                        sub_int(integer_of_int32(size), (1)))))))))) }
  (init:
  try
   begin
     (if ((neq_pointer t) null)
     then
      (if ((gt_int_ (integer_of_int32 size)) (0))
      then
       (C_5:
       (let jessie_5 = (let jessie_1 = (safe_int8_of_integer_ (0)) in
                       (let jessie_2 = t in
                       (let jessie_3 = (integer_of_int32 (C_2:
                                                         (JC_29:
                                                         (int32_of_integer_ 
                                                          (C_1:
                                                          ((sub_int (integer_of_int32 size)) (1))))))) in
                       (let jessie_4 = ((shift jessie_2) jessie_3) in
                       (JC_30:
                       (((((offset_upd_ char_P_t_20_alloc_table) char_P_char_M_t_20) jessie_2) jessie_3) jessie_1)))))) in
       void))
      else void)
     else void);
    (raise Return);
    (raise Return)
   end
   with
   Return ->
   void end)
  { true }


